mysql> create database company;
Query OK, 1 row affected (0.02 sec)
------------------------------------------------------------------------------------------------------------------------------------------------------
mysql> show databases;
+--------------------------+
| Database                 |
+--------------------------+
| banking                  |
| company                  |
| employeemanagementsystem |
| hospital_db              |
| hotelbookingsystem       |
| information_schema       |
| library_db               |
| librarydb                |
| movierental              |
| mysql                    |
| mysql_python             |
| performance_schema       |
| studentrecordsmgmt       |
| sys                      |
+--------------------------+
14 rows in set (0.00 sec)
------------------------------------------------------------------------------------------------------------------------------------------------------
mysql> use company;
Database changed
mysql> -- Create employees table
mysql> CREATE TABLE employees (
    ->     emp_id INT PRIMARY KEY,
    ->     name VARCHAR(100),
    ->     dept_id INT
    -> );
Query OK, 0 rows affected (0.02 sec)
------------------------------------------------------------------------------------------------------------------------------------------------------
mysql>
mysql> -- Create department table
mysql> CREATE TABLE department (
    ->     dept_id INT PRIMARY KEY,
    ->     dept_name VARCHAR(100)
    -> );
Query OK, 0 rows affected (0.01 sec)
------------------------------------------------------------------------------------------------------------------------------------------------------
mysql> -- Insert data into employees table
mysql> INSERT INTO employees (emp_id, name, dept_id)
    -> VALUES
    -> (1, 'John', 101),
    -> (2, 'Sarah', 102),
    -> (3, 'Mike', 103),
    -> (4, 'Rachel', 104);
Query OK, 4 rows affected (0.02 sec)
Records: 4  Duplicates: 0  Warnings: 0
------------------------------------------------------------------------------------------------------------------------------------------------------
mysql>
mysql> -- Insert data into department table with matching dept_id values
mysql> INSERT INTO department (dept_id, dept_name)
    -> VALUES
    -> (101, 'HR'),
    -> (102, 'IT'),
    -> (103, 'Sales'),
    -> (104, 'Marketing');
Query OK, 4 rows affected (0.00 sec)
Records: 4  Duplicates: 0  Warnings: 0
------------------------------------------------------------------------------------------------------------------------------------------------------
mysql> alter table employees
    -> add column salary decimal (10,2),
    -> add column hire_date date;
Query OK, 0 rows affected (0.06 sec)
Records: 0  Duplicates: 0  Warnings: 0
------------------------------------------------------------------------------------------------------------------------------------------------------
mysql> truncate table employees;
Query OK, 0 rows affected (0.03 sec)
------------------------------------------------------------------------------------------------------------------------------------------------------
mysql> INSERT INTO employees (emp_id, name, dept_id, salary, hire_date)
    -> VALUES
    -> (1, 'John', 101, 55000, '2018-05-01'),
    -> (2, 'Sarah', 102, 60000, '2019-06-15'),
    -> (3, 'Mike', 103, 70000, '2020-07-20'),
    -> (4, 'Rachel', 104, 80000, '2021-08-25');
Query OK, 4 rows affected (0.01 sec)
Records: 4  Duplicates: 0  Warnings: 0
------------------------------------------------------------------------------------------------------------------------------------------------------
mysql> select * from employees;
+--------+--------+---------+----------+------------+
| emp_id | name   | dept_id | salary   | hire_date  |
+--------+--------+---------+----------+------------+
|      1 | John   |     101 | 55000.00 | 2018-05-01 |
|      2 | Sarah  |     102 | 60000.00 | 2019-06-15 |
|      3 | Mike   |     103 | 70000.00 | 2020-07-20 |
|      4 | Rachel |     104 | 80000.00 | 2021-08-25 |
+--------+--------+---------+----------+------------+
4 rows in set (0.00 sec)
------------------------------------------------------------------------------------------------------------------------------------------------------
mysql> SELECT emp_id, name, salary, hire_date,
    ->        SUM(salary) OVER (ORDER BY hire_date) AS running_total_salary
    -> FROM employees
    -> ORDER BY hire_date;
+--------+--------+----------+------------+----------------------+
| emp_id | name   | salary   | hire_date  | running_total_salary |
+--------+--------+----------+------------+----------------------+
|      1 | John   | 55000.00 | 2018-05-01 |             55000.00 |
|      2 | Sarah  | 60000.00 | 2019-06-15 |            115000.00 |
|      3 | Mike   | 70000.00 | 2020-07-20 |            185000.00 |
|      4 | Rachel | 80000.00 | 2021-08-25 |            265000.00 |
+--------+--------+----------+------------+----------------------+
4 rows in set (0.02 sec)
------------------------------------------------------------------------------------------------------------------------------------------------------
mysql> SELECT emp_id, name, salary
    -> FROM employees
    -> WHERE salary > (SELECT AVG(salary) FROM employees);
+--------+--------+----------+
| emp_id | name   | salary   |
+--------+--------+----------+
|      3 | Mike   | 70000.00 |
|      4 | Rachel | 80000.00 |
+--------+--------+----------+
2 rows in set (0.01 sec)
------------------------------------------------------------------------------------------------------------------------------------------------------
mysql> WITH avg_salary_per_dept AS (
    ->     SELECT dept_id, AVG(salary) AS avg_salary
    ->     FROM employees
    ->     GROUP BY dept_id
    -> )
    -> SELECT e.emp_id, e.name, e.salary, d.dept_name, a.avg_salary
    -> FROM employees e
    -> JOIN department d ON e.dept_id = d.dept_id
    -> JOIN avg_salary_per_dept a ON e.dept_id = a.dept_id
    -> ORDER BY d.dept_name;
+--------+--------+----------+-----------+--------------+
| emp_id | name   | salary   | dept_name | avg_salary   |
+--------+--------+----------+-----------+--------------+
|      1 | John   | 55000.00 | HR        | 55000.000000 |
|      2 | Sarah  | 60000.00 | IT        | 60000.000000 |
|      4 | Rachel | 80000.00 | Marketing | 80000.000000 |
|      3 | Mike   | 70000.00 | Sales     | 70000.000000 |
+--------+--------+----------+-----------+--------------+
4 rows in set (0.03 sec)
